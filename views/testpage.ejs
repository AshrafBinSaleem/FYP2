<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <!--Load the AJAX API-->
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

  <script type="text/javascript">
    var month = [<%- mon %> ];
    var optionsLineChart = {
        title: 'Sales Performance',
        series: {
          curveType: 'function'

        },
        legend: { position: 'bottom' }
      };
    // Load the Visualization API and the corechart package.
    google.charts.load('current', { 'packages': ['corechart', 'line'] });
    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(drawChart);
    google.charts.setOnLoadCallback(drawPieChart);
    google.charts.setOnLoadCallback(drawPlayModeChartLine);
    google.charts.setOnLoadCallback(drawPlayModeChart);
    
    //console.log(a);
    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawChart() {

      //Google chart visualization data table
      console.log("Drawing sales performance chart")
      var data = new google.visualization.DataTable();
      var Header = [<%- tit %>];
      var HeaderType = [<%- coltype %>];

      for (let index = 0; index < Header.length; index++) {
        data.addColumn(HeaderType[index], Header[index]);

      }
      //Errors signs are just their they do not affect the function of the system or indicate any real errors. Could just be IDE being unable to comprehend the action being written.

      var chartsdata = [<%- data %>];
      for (var i = 0; i < month.length; i++) {
        var temp = [];
        temp.push(month[i]);

        for (var index = 0; index < (Header.length - 1); index++) {
         
          temp.push(chartsdata[i + (index * month.length)]);
        }

        data.addRow(temp);
      }

      var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));
      chart.draw(data, optionsLineChart);

    }
    function drawPieChart() {
      var data = new google.visualization.DataTable();
      var chartsdata = [<%- data %>];
      var totalPergame = []
      var Header = ['Title','Sales'];
      var HeaderType = ['string','number'];

      for (let index = 0; index < Header.length; index++) {
        data.addColumn(HeaderType[index], Header[index]);
        
      }

      var totalAdd = 0
      for (var i = 0; i < chartsdata.length; i++) {
        totalAdd += chartsdata[i]
        if(((i+1) % 12) == 0){
          totalPergame.push(totalAdd)
          totalAdd = 0;
        }
      }

      var titles = [<%- tit %>];
      for (var i = 0; i< totalPergame.length; i++)
      {
        data.addRow([titles[i+1], totalPergame[i]]);
      }

    var options = {
      title: 'Sales share market'
    };

    var chart = new google.visualization.PieChart(document.getElementById('piechart'));

    chart.draw(data, options);
    }

    //Play Mode Charts
    function drawPlayModeChartLine() {
       //Google chart visualization data table
      console.log("Drawing playmode")
       var data = new google.visualization.DataTable();
      var Header = [<%- gametitle %>];
      var HeaderType = [<%- gamecoltype %>];

      for (let index = 0; index < Header.length; index++) {
        data.addColumn(HeaderType[index], Header[index]);

      }
      
      var chartsdata = [<%- playmodedata %>];
      for (var i = 0; i < month.length; i++) {
        var temp = [];
        temp.push(month[i]);

        for (var index = 0; index < (Header.length - 1); index++) {
          
          temp.push(chartsdata[i + (index * month.length)]);
        }

        data.addRow(temp);
      }

        var chart = new google.visualization.LineChart(document.getElementById('curve2_chart'));

        chart.draw(data, optionsLineChart);
      }
    function drawPlayModeChart() {

      var data = new google.visualization.DataTable();
      var chartsdata = [<%- playmodedata %>];
      var totalPergame = []
      var Header = ['Type','Sales'];
      var HeaderType = ['string','number'];

      for (let index = 0; index < Header.length; index++) {
        data.addColumn(HeaderType[index], Header[index]);
        
      }

      var totalAdd = 0
      for (var i = 0; i < chartsdata.length; i++) {
        totalAdd += chartsdata[i]
        if(((i+1) % 12) == 0){
          totalPergame.push(totalAdd)
          totalAdd = 0;
        }
      }

      var titles = [<%- gametitle %>];
      for (var i = 0; i< totalPergame.length; i++)
      {
        data.addRow([titles[i+1], totalPergame[i]]);
      }

    var options = {
      title: 'Sales share market'
    };

    var chart = new google.visualization.PieChart(document.getElementById('pie2chart'));

    chart.draw(data, options);
    }

  </script>
  <title>Document</title>
</head>

<body>
  <p>Hello world</p>
  <!--Div that will hold the pie chart-->
  <div id=curve_chart></div>
  <div id="piechart" style="width: 900px; height: 500px;"></div>
  <div id=curve2_chart></div>
  <div id="pie2chart" style="width: 900px; height: 500px;"></div>

</body>